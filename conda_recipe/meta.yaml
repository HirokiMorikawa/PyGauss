source:
  git_url: https://github.com/chrisjsewell/PyGauss.git
  git_tag: v0.5.1
#  patches:
   # List any patch files here
   # - fix.patch

package:
  name: pygauss
  version: 0.5.1

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pygauss = pygauss:main
    #
    # Would create an entry point called pygauss that calls pygauss.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - numpy >=1.9
    - scipy >=0.15
    - matplotlib >=1.4
    - pandas >=0.15
    - ipython >=3
    - scikit-learn >=0.15
    - paramiko
    - pil
    - cclib
    - chemview
    - pyopengl ==3.0.2
    - chemlab
    - nose
    - nose-parameterized
    - python-docx >=0.8.5

  run:
    - python
    - numpy >=1.9
    - scipy >=0.15
    - matplotlib >=1.4
    - pandas >=0.15
    - ipython >=3
    - scikit-learn >=0.15
    - paramiko
    - pil
    - cclib
    - chemview
    - pyopengl ==3.0.2
    - chemlab
    - nose
    - nose-parameterized
    - python-docx >=0.8.5

test:
  # Python imports
  imports:
    - pygauss
    - pygauss.cclib_patch
    - pygauss.cclib_patch.parser
    - pygauss.chemlab_patch
    - pygauss.chemlab_patch.graphics
    - pygauss.chemlab_patch.graphics.renderers
    - pygauss.chemlab_patch.io
    - pygauss.chemlab_patch.io.handlers
    - pygauss.chemview_patch
    - pygauss.test_data
    - pygauss.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    # Put any additional test requirements here.  For example
    - nose
    - nose-parameterized

about:
  home: https://github.com/chrisjsewell/PyGauss
  license: GNU General Public License v3 (GPLv3)
  summary: Python API for analysis and documentation of molecular chemical compuations

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
